name: Build PR

on:
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:10.11
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '24.0.5'
          elixir-version: '1.12.3'

      - uses: actions/cache@v2
        with:
          path: services/app/deps
          key: v2-${{ runner.os }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/services/app/mix.lock')) }}
          restore-keys: |
            v2-${{ runner.os }}-deps-

      - uses: actions/cache@v2
        with:
          path: services/app/_build
          key: v2-${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/services/app/mix.lock')) }}
          restore-keys: |
            v2-${{ runner.os }}-build-

      - uses: actions/cache@v2
        with:
          path: ~/.mix
          key: v2-${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/services/app/mix.lock')) }}
          restore-keys: |
            v2-${{ runner.os }}-mix-

      - name: Get deps
        run: mix deps.get
        working-directory: ./services/app

      - name: Mix format
        run: mix format --check-formatted
        working-directory: ./services/app
        env:
          MIX_ENV: test

      - name: Mix credo
        run: mix credo
        working-directory: ./services/app
        env:
          MIX_ENV: test

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn dependencies
        run: yarn install --froze-lockfile
        working-directory: ./services/app

      - name: Eslint
        run: yarn lint
        working-directory: ./services/app

      - name: Run jest
        run: yarn test
        working-directory: ./services/app

      - name: Setup db
        run: mix ecto.create && mix ecto.migrate
        working-directory: ./services/app
        env:
          MIX_ENV: test

      - run: make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./services/app/cover/excoveralls.json
          fail_ci_if_error: true
