.d-flex.align-items-center.border-bottom
  h1.m-0.text-capitalize.text-nowrap = @tournament.name
  .text-center.ml-3 data-toggle="tooltip" data-placement="right" title=@tournament.difficulty
    img alt=@tournament.difficulty src="/assets/images/levels/#{@tournament.difficulty}.svg"

  = if is_upcoming?(@tournament) do
    .ml-auto
      = if is_intended_player?(@tournament, @current_user) do
        button.btn.btn-outline-danger[phx-click="leave"] Leave
      - else
        button.btn.btn-outline-secondary[phx-click="join"] Join
      = if can_moderate?(@tournament, @current_user) do
        button.btn.btn-success.ml-2[phx-click="start" disabled=!can_be_started?(@tournament)] Promote
        button.btn.btn-danger.ml-2[phx-click="cancel"] Cancel
        = if !is_public?(@tournament) do
          button.btn.btn-danger.ml-2[phx-click="open_up"] Open Up

  = if is_waiting_participants?(@tournament) do
    .ml-auto
      = if is_individual?(@tournament) do
        = if is_player?(@tournament, @current_user.id) do
          button.btn.btn-outline-danger[phx-click="leave"] Leave
        - else
          button.btn.btn-outline-secondary[phx-click="join"] Join
      = if can_moderate?(@tournament, @current_user) do
        button.btn.btn-success.ml-2[phx-click="start" disabled=!can_be_started?(@tournament)] Start
        button.btn.btn-info.ml-2[phx-click="back"] Back
        button.btn.btn-danger.ml-2[phx-click="cancel"] Cancel
        = if !is_public?(@tournament) do
          button.btn.btn-danger.ml-2[phx-click="open_up"] Open Up

  = if is_active?(@tournament) do
    .ml-auto
      = if can_moderate?(@tournament, @current_user) do
        button.btn.btn-danger.ml-2[phx-click="cancel"] Cancel
        button.btn.btn-danger.ml-2[phx-click="open_up"] Open Up

.d-flex.align-items-center.mt-2
  .small.text-muted
    span State: #{@tournament.state}
    span.ml-3 Type: #{@tournament.type}
    = if can_moderate?(@tournament, @current_user) do
      span.ml-3 Access: #{@tournament.access_type}
      span.ml-3 Is live: #{@tournament.is_live}
    = if is_upcoming?(@tournament) do
      span.ml-3 Starts_on: #{render_datetime(@tournament.starts_at)}
      span.ml-3 Inserted_at: #{render_datetime(@tournament.inserted_at)}
  = if is_waiting_participants?(@tournament) do
    = if @time.minutes >= 0 and @time.seconds >= 0  do
      span.ml-3 The tournament will start in #{@time.minutes}:#{@time.seconds}
    - else
      span.ml-3 The tournament will start soon
  = if is_visible_by_token?(@tournament) && can_moderate?(@tournament, @current_user) do
    span.ml-3 Private url: #{CodebattleWeb.Router.Helpers.tournament_url(@socket, :show, @tournament.id, access_token: @tournament.access_token)}
